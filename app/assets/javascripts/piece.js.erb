var Piece = function(player){
  this.square = null;
  this.player = player;
  this.isKing = false;
  this.kingRow = (player.name == 'p1' ? 0 : 7);
  Piece.all.push(this);
}

Piece.all = [];

Piece.piecesWithJumps = function(player){
  return Piece.all.filter(function(piece){
    return piece.jumpsAvailable().length > 0 && player == piece.player;
  });
};

Piece.findOnClick = function(imageTag){
  var square = $(imageTag).parent();
  return Square.findByJSquare(square).piece;
};

Piece.prototype.setSlides = function(){
  this.slides = [];
  if(this.player.name == 'p1' || this.isKing){
    this.slides.push(Square.findByPosition(this.square.positionX - 1, this.square.positionY - 1));
    this.slides.push(Square.findByPosition(this.square.positionX + 1, this.square.positionY - 1));
  }
  if(this.player.name == 'p2' || this.isKing){
    this.slides.push(Square.findByPosition(this.square.positionX - 1, this.square.positionY + 1));
    this.slides.push(Square.findByPosition(this.square.positionX + 1, this.square.positionY + 1));
  }
}

Piece.prototype.setJumps = function(){
  this.jumps = [];
  if(this.player.name == 'p1' || this.isKing){
    this.jumps.push(Square.findByPosition(this.square.positionX - 2, this.square.positionY - 2));
    this.jumps.push(Square.findByPosition(this.square.positionX + 2, this.square.positionY - 2));
  }
  if(this.player.name == 'p2' || this.isKing){
    this.jumps.push(Square.findByPosition(this.square.positionX - 2, this.square.positionY + 2));
    this.jumps.push(Square.findByPosition(this.square.positionX + 2, this.square.positionY + 2));
  }
}

Piece.prototype.legalMoves = function(){
  if (Piece.piecesWithJumps(this.player).length > 0 && Piece.piecesWithJumps(this.player).indexOf(this) < 0){
    return []
  } else if(this.jumpsAvailable().length > 0){
    return this.jumpsAvailable();
  } else {
    return this.slides.filter(function(slide){
      return !!slide && slide.empty();
    });
  }
};


Piece.prototype.jumpsAvailable = function(){
  return this.jumps.filter(function(jump, index){
    return this.slides[index] && !this.slides[index].empty() && (this.slides[index].piece.player == this.player.opponent) && jump && jump.empty()
  }.bind(this))
}

Piece.prototype.toggleHighlight = function(){
  this.legalMoves().forEach(function(square){
    square.jSquare().toggleClass('highlighted');
  });
  this.square.jSquare().toggleClass('highlighted');
};

Piece.prototype.kingMe = function(){
  this.isKing = true;
}

Piece.prototype.goToSquare = function(newSquare){
  this.square = newSquare;
  this.square.piece = this;
  this.square.jSquare().append(this.render());
  this.setSlides();
  this.setJumps();
};

Piece.prototype.render = function(){
  if (this.player.name == 'p1'){
    if (this.isKing){
      return '<%= image_tag "king-burger-1", class:"p1 piece king" %>'
    } else {
      return '<%= image_tag "burger-1", class:"p1 piece"%>'
    }
  }
  if (this.player.name == 'p2'){
    if (this.isKing){
      return '<%= image_tag "king-burger-2", class:"p2 piece king" %>'
    } else {
      return '<%= image_tag "burger-2", class:"p2 piece"%>'
    }
  }
};

Piece.prototype.moveController = function(newSquare){
    this.toggleHighlight();
  // was the last move a jump?
  if(this.jumps.indexOf(newSquare) >= 0){
    this.capturePiece(newSquare);
    this.move(newSquare);
    if(this.jumpsAvailable().length > 0){
      this.doubleJumpHighlight();
      this.jumpAgain();
    } else {
      this.player.turn.end()
    }
  } else {
    this.move(newSquare);
    this.player.turn.end()
  }
};

Piece.prototype.doubleJumpHighlight = function(){
  if(this.jumpsAvailable().length > 0){
    this.jumpsAvailable().forEach(function(square){
      square.jSquare().toggleClass('highlighted');
    });
    this.square.jSquare().toggleClass('highlighted');
  }
};

Piece.prototype.jumpAgain = function() {
  this.square.jSquare().on('click', this, function(e){
    var piece = e.data;
    piece.square.jSquare().off();
    //deselect square
  });
  $('.highlighted').on('click', this, function(e){
    $('.highlighted').off();
    var piece = e.data;
    var square = Square.findByJSquare($(this));
    piece.moveController(square);
    //end turn
  })
};

Piece.prototype.move = function(newSquare) {
  this.leaveSquare();
  if (newSquare.positionY == this.kingRow){
    this.kingMe();
  }
  this.goToSquare(newSquare);
};


Piece.prototype.capturePiece = function(newSquare){
  var index = this.jumps.indexOf(newSquare);
  if (index >= 0){
    this.slides[index].piece.die()
  }
};

Piece.prototype.leaveSquare = function(){
  this.square.jSquare().html('');
  this.square.piece = null;
};

Piece.prototype.leaveGame = function() {
  var index = Piece.all.indexOf(this);
  Piece.all.splice(index, 1);
};

Piece.prototype.die = function() {
  this.leaveSquare();
  this.leaveGame();
  this.player.setPieces();
};
